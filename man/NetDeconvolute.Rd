% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Main.R
\name{NetDeconvolute}
\alias{NetDeconvolute}
\title{Network inference module}
\usage{
NetDeconvolute(
  inputDat,
  detectOutliers = TRUE,
  option,
  Calibration = TRUE,
  tag = NULL,
  log.transform = TRUE,
  cutoff_fusedmat = 0.5,
  standardization = TRUE,
  NetworkFile = NULL,
  Plot.PCA = TRUE,
  Plot.modelSelect = TRUE,
  Plot.Covariance = TRUE,
  lambda.vec = NULL,
  numLambda = 30,
  numFolds = 5,
  criterion = c("AIC", "BIC", "eBIC", "CV"),
  optLambda = NULL,
  verbose = F
)
}
\arguments{
\item{inputDat}{a list object containing up to three matrices (X, Y and Z) with features as the row.names and sample IDs on the columns.}

\item{detectOutliers}{whether to carry out outlier filtering using PCA. Outliers will be removed if outside of 4 SDs from the median of the first two PCs.}

\item{option}{option=1 for supervised method and option=2 for hybrid method.}

\item{Calibration}{whether to carry out the model selection step by fitting glasso on a grid of lambda values. To be turned off after picking an optimal lambda.}

\item{tag}{a string that will be appended to the end of the output files like a tag.}

\item{log.transform}{whether to log-transform each matrix in inputDat (default=TRUE)}

\item{cutoff_fusedmat}{cut-off value between 0 to 1 used to convert the fused matrix into an adjacency matrix.}

\item{standardization}{whether to carry out standardization for each data in inputDat.}

\item{NetworkFile}{prior network file. File should indicate which data type the feature comes from (i.e. X or Y) using "NodeA_DT" and "NodeB_DT"
in case of same gene name. Required if option=2 (hybrid).}

\item{Plot.PCA}{whether to output the plots of PCA of the input data (default=TRUE)}

\item{Plot.modelSelect}{whether to output the plots to help pick a regularization parameter based on AIC, BIC, eBIC and CV (default=TRUE).}

\item{Plot.Covariance}{whether to output the heatmap illustrating the cross-covariance matrix. Not recommended if the dimension of the matrix exceeds 2000.}

\item{lambda.vec}{a vector of regularization parameter to use in the soft-thresholding in glasso.}

\item{numLambda}{number of values in the regularization parameter.}

\item{numFolds}{number of folds in the CV model selection}

\item{criterion}{c("AIC","BIC","eBIC","CV"). Model selection criteria to use to pick the parameter that yield the best penalized log-likelihood.}

\item{optLambda}{value of the regularization parameter to use to estimate the sparse inverse covariance.}

\item{verbose}{whether to output steps and update status of running the function.}
}
\value{
Multiple output files with inferred network and estimated partial correlation matrix.
\itemize{
  \item PCAplot.pdf - A panel of PCA plots of individual -omics data and combined data highlighting outliers.
  \item Boxplots_outliers.pdf - A panel of boxplots of each -omics data across the samples, highlighting outliers
  \item Heatmap_CrossCovarianceMatrix.pdf - A heatmap of the calculated cross-covariance matrix of the combined data.
  \item CalibrationPlots_glasso.pdf - A multi-panel plot of four model selection criteria against a grid of lambda values to help user pick the optimal value.
  \item Plots_glasso.png - a multipanel plot illustrating the derivation of the precision matrix from the cross-covariance matrix.
  \item Plots_Hybridmethod.png - a multipanel plot illustrating the derivation of the precision matrix from supervised approach and combining the prior information to form the fused matrix in the hybrid approach.
  \item glasso_estimated_icov.txt - a text file containing the estimated sparse inverse of the covariance matrix (also known as precision matrix).
  \item PartialCorrelation_icov.txt - a text file containing the corresponding partial correlation calculated from the estimated inverse of covariance.
  \item Combined_data.txt - A dataframe with the various -omics data concatenated together after standardization.
  \item Estimated_Network_glasso.txt - The corresponding network file from the estimated precision matrix from the supervised approach.
  \item Fusednetwork_hybridmethod.txt - The corresponding network file from the estimated fused matrix from the hybrid approach.
}
}
\description{
This function helps to create an inferred partial correlation network via two approaches:(1) Supervised and (2) Hybrid.
The supervised approach uses glasso to estimate a sparse inversed covariance matrix completely from the data alone.
The hybrid approach combines a prior network with an estimated network from the supervised method to create a fused network.
}
\examples{

data(Tulip_Protein)
data(Tulip_microRNA)

row.names(Tulip_Protein) = Tulip_Protein$Protein
row.names(Tulip_microRNA) = Tulip_microRNA$miRNA

Tulip_Protein = Tulip_Protein[,-1]
Tulip_microRNA = Tulip_microRNA[,-1]

inputDat=list(Tulip_Protein, Tulip_microRNA)
names(inputDat) = c("Protein","microRNA")

#######################
# supervised approach #
#######################
NetDeconvolute(inputDat, option=1,log.transform=TRUE, tag="supervised",criterion="eBIC",
Calibration=TRUE, verbose=T)

## you can also refine your lambda vector ##
lambda_new=exp(seq(log(0.5),log(0.01), length=30))

NetDeconvolute(inputDat, option=1,log.transform=TRUE, tag= "supervised2",criterion="eBIC",
Calibration=TRUE, lambda.vec=lambda_new, verbose=T)

# pick a threshold using the calibration plot with highest CVscore or lowest AIC/BIC/eBIC.
# Then turn off calibration to FALSE to re-running the cross-validation for glasso.
NetDeconvolute(inputDat, option=1,log.transform=TRUE,tag= "supervised",criterion="eBIC",
Calibration=FALSE, optLambda=0.38,verbose=TRUE)

###################
# hybrid approach #
###################
data(TargetScan_network)
data(PPI_network)
TargetScan_network$NodeA_DT = "X"
TargetScan_network$NodeB_DT = "Y"
PPI_network$NodeA_DT = "X"
PPI_network$NodeB_DT = "X"

colnames(TargetScan_network) = c("NodeA","NodeB","Dir","NodeA_DT","NodeB_DT")
colnames(PPI_network) = c("NodeA","NodeB","Dir","NodeA_DT","NodeB_DT")
PriorNet = rbind(TargetScan_network,PPI_network)

NetDeconvolute(inputDat, option=2, NetworkFile=PriorNet, tag="hybrid",criterion="eBIC",
log.transform=TRUE,Calibration=FALSE, optLambda=0.382, verbose=TRUE)

}
